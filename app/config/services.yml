# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    embarcacion_brochures: '%kernel.project_dir%/web/uploads/embarcacion'
    # Este parametro esta activo por default en symfony 4.0, pero no en 3.4, por lo que genera warnings de autowiring
    container.autowiring.strict_mode: true

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    app.upload.listener:
        class: AppBundle\EventListener\UploadListener
        arguments: ['@doctrine.orm.entity_manager']
        tags:
            - { name: kernel.event_listener, event: oneup_uploader.post_persist, method: onUpload }

    AppBundle\Entity\UsuarioListener:
        autowire: true
        tags:
            - { name: doctrine.orm.entity_listener }

    AppBundle\EventListener\ReportePagoListener:
        tags:
            - { name: doctrine.event_subscriber }

    AppBundle\EventListener\ReporteAstilleroListener:
        tags:
            - { name: doctrine.event_subscriber }

    AppBundle\EventListener\ReporteMarinaListener:
        tags:
            - { name: doctrine.event_subscriber }

    AppBundle\EventListener\ReporteSolicitudListener:
        tags:
            - { name: doctrine.event_subscriber }

    AppBundle\DataTables\:
        resource: '../../src/AppBundle/DataTables'
        autowire: true
        public: true
        tags: [ datatable ]

    AppBundle\Form\Contabilidad\FacturacionType:
        arguments: ['@doctrine.orm.entity_manager']
        tags: [form.type]

    AppBundle\Serializer\CotizacionNameConverter:
        alias: 'Symfony\Component\Serializer\NameConverter\NameConverterInterface'

    doctrine.orm.default_entity_manager.property_info_extractor:
        alias: 'Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface'