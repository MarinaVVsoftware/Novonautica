<?php

namespace AppBundle\Repository;

/**
 * AstilleroCotizacionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AstilleroCotizacionRepository extends \Doctrine\ORM\EntityRepository
{
    public function soloAceptados()
    {
        $qb = $this->createQueryBuilder('ac');

        return $qb
            ->select('ac')
            ->where($qb->expr()->eq('ac.validacliente',2))
            ->getQuery()
            ->getResult();
    }

    public function getCotizacionByFolio($folio)
    {
        $folios = explode('-', $folio);

        $qb = $this->createQueryBuilder('atc');

        $qb->where('atc.folio = :folio')
            ->setParameter('folio', $folios[0]);

        if (isset($folios[1])) {
            $qb->andWhere('atc.foliorecotiza = :foliorecotiza')
                ->setParameter('foliorecotiza', $folios[1]);
        }

        return $qb->getQuery()->getOneOrNullResult();
    }

    public function getAllClientes()
    {
        $qb = $this->createQueryBuilder('ac');

        return $qb
            ->select('cliente.nombre AS nombre')
            ->leftJoin('ac.cliente', 'cliente')
            ->distinct()
            ->getQuery()
            ->getResult();
    }

    public function getAllBarcos()
    {
        $qb = $this->createQueryBuilder('ac');

        return $qb
            ->select('barco.nombre AS nombre')
            ->leftJoin('ac.barco', 'barco')
            ->distinct()
            ->getQuery()
            ->getResult();
    }

    /**
     * @return string
     * @throws \Doctrine\ORM\NonUniqueResultException
     * @throws \Doctrine\ORM\NoResultException
     */
    public function getMostDebtor()
    {
        return $this->createQueryBuilder('ac')
            ->leftJoin('ac.cliente', 'c')
            ->select('c.nombre')
            ->where('ac.validacliente = 2')
            ->groupBy('c.id')
            ->setMaxResults(1)
            ->getQuery()
            ->getSingleResult();
    }

    /**
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getTotalAdeudo()
    {
        return $this->createQueryBuilder('ac')
            ->select('SUM(ac.total)')
            ->where('ac.validacliente = 2')
            ->getQuery()
            ->getSingleScalarResult();
    }

    /**
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getTotalAbono()
    {
        return $this->createQueryBuilder('ac')
            ->select('SUM(ac.pagado)')
            ->where('ac.validacliente = 2')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function getWorkedBoatsByDaterange(\DateTime $start, \DateTime $end)
    {
        return $this->createQueryBuilder('ac')
            ->select('ac.fechaLlegada AS fecha' ,'COUNT(ac.id) AS total')
            ->where('ac.fechaLlegada BETWEEN :start AND :end')
            ->andWhere('ac.validacliente = 2')
            ->setParameters([
                'start' => $start,
                'end' => $end,
            ])
            ->groupBy('ac.fechaLlegada')
            ->orderBy('ac.fechaLlegada', 'ASC')
            ->getQuery()
            ->getScalarResult();
    }
}
