{% extends 'estructura/plantilla.twig' %}

{% set cotizacion = contratista.astilleroODT.astilleroCotizacion %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/dropzone.css') }}">
    <style>
        :root .content-wrapper hr {
            margin-top: 1rem !important;
            margin-bottom: 1rem !important;
        }

        .table > tbody > tr.pago-agregado > td .input-group-addon {
            border-radius: 0;
        }

        .table > tbody > tr.pago-agregado > td {
            padding: 0;
        }

        .bordered-group > .form-group {
            border: 1px solid #2A3141;
            padding: 1rem;
        }
    </style>
{% endblock %}
{% block contwrapper %}
    <div class="content-wrapper">
        <section class="content">
            <div class="row">
                <div class="col-md-12">
                    {% for message in app.flashes('notice') %}
                        <div class="alert alert-danger">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×
                            </button>
                            {{ message }}
                        </div>
                    {% endfor %}
                </div>
            </div>
            <div class="panel panel-novo">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-sm-6">
                            <h3 class="panel-title">{{ title }}</h3>
                            <span>
                                {{ cotizacion.foliorecotiza ? cotizacion.folio ~ '-' ~ cotizacion.foliorecotiza : cotizacion.folio }}
                            </span>
                        </div>
                        <div class="col-sm-6">
                            <a href="{{ path('ordendetrabajo_show',{'id':contratista.astilleroODT.id}) }}"
                               class="btn btn-contorno-azul pull-right">
                                Regresar
                            </a>
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-sm-3">
                            <label>Trabajo</label>
                            <div class='info-input'>{{ contratista.cotizacionInicial }}</div>
                        </div>
                        <div class="col-sm-3">
                            <label>Contratista</label>
                            <div class='info-input'>{{ contratista.proveedor.nombre }}</div>
                        </div>
                        <div class="col-sm-3">
                            <label>Razón social</label>
                            <div class='info-input'>{{ contratista.proveedor.razonsocial }}</div>
                        </div>
                        <div class="col-sm-3">
                            <label>Embarcación</label>
                            <div class='info-input'>{{ cotizacion.barco }}</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-3">
                            <label>Fecha inicio</label>
                            <div class='info-input'>{{ cotizacion.fechaLlegada|date('d/m/Y') }}</div>
                        </div>
                        <div class="col-sm-3">
                            <label>Fecha fin</label>
                            <div class='info-input'>{{ cotizacion.fechaSalida|date('d/m/Y') }}</div>
                        </div>
                    </div>
                    <div class="row espacio-linea-arriba2 espacio-linea-abajo2">
                        <div class="col-sm-12">
                            <hr>
                        </div>
                    </div>
                    {{ form_start(edit_form) }}
                    <div class="row">
                        <div class="col-sm-12">
                            <h3 class="letra-azul">Actividades</h3>
                            {% form_theme edit_form.contratistaactividades 'ordendetrabajo/coleccion-actividad.twig' %}
                            {{ form_row(edit_form.contratistaactividades, { 'attr': { 'class': 'bordered-group' }}) }}
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-11">
                            <a href="#" id="add-another-actividad" class="letra-azul pull-right">
                                + Agregar Actividad
                            </a>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <button type="submit" class="pull-right btn btn-azul"
                                    data-loading-text="<i class='fa fa-spinner fa-spin '></i> Guardando...">
                                <i class="fa fa-floppy-o" aria-hidden="true"></i>
                                Guardar
                            </button>
                        </div>
                    </div>
                    {{ form_end(edit_form) }}

                    <div class="row espacio-linea-arriba2 espacio-linea-abajo2">
                        <div class="col-sm-12">
                            <hr>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="{{ asset('js/dropzone.js') }}"></script>

    <script type="text/javascript">
      /**
       * Coleccion de actividades
       */
      (function ($) {
        const actividadForm = document.querySelector('[name="appbundle_astillerocontratista"]');
        const addLink = document.getElementById('add-another-actividad');
        const prototypeHolder = document.getElementById('appbundle_astillerocontratista_contratistaactividades');
        let existingDropzones = [];
        let dropzoneCounter = 0;
        let addedFiles = false;
        let counter = '{{ edit_form.contratistaactividades|length }}';

        Array
            .from(prototypeHolder.children)
            .forEach(function (element) {
              appendRemoveLink(element);
              existingDropzones.push(appendDropzone(element));
            });

        addLink.addEventListener('click', function (e) {
          e.preventDefault();
          const prototype = prototypeHolder.dataset.prototype.replace(/__name__/g, counter);
          const tempContainer = document.createElement('div');
          tempContainer.innerHTML = prototype;

          let element = tempContainer.firstElementChild;
          appendFunctions(element);
          appendRemoveLink(element);
          prototypeHolder.appendChild(element);
          counter++;
        });

        function appendRemoveLink(element) {
          let removeElementLink = element.querySelector('.remove-actividad');

          removeElementLink.addEventListener('click', function (e) {
            e.preventDefault();
            this.parentNode.parentNode.parentNode.remove(this)
          });
        }

        function appendFunctions(element) {
          $(element).on('keypress', '.esdecimal', function () {
            return esNumeroDecimal(event, this);
          });

          $(element).on('input', '.limite100', function () {
            let value = $(this).val();

            if ((value !== '') && (value.indexOf('.') === -1)) {
              $(this).val(Math.max(Math.min(value, 100), 0));
            }
          });

          $(element).find('.input-daterange').datepicker({
            format: 'yyyy-mm-dd',
            language: "es",
            orientation: "bottom auto",
            autoclose: true
          });

          existingDropzones.push(appendDropzone(element));
        }

        /**
         *  Dropzone
         */
        function appendDropzone(container) {
          const fotoContainer = container.querySelector('.foto-container');
          const dzContainer = container.querySelector('.dropzone');
          let count = parseInt(fotoContainer.dataset.length);

          Dropzone.autoDiscover = false;

          return new Dropzone(dzContainer, {
            url: '{{ oneup_uploader_endpoint('actividad_fotos') }}',
            haveNewFiles: false,
            acceptedFiles: 'image/*',
            maxFilesize: 2,
            dictFileTooBig: 'La imagen es demasiado pesada el tamaño maximo es de 1MiB',
            parallelUploads: 1,
            addRemoveLinks: true,
            autoProcessQueue: false,
            init: function () {
              let that = this;
              this
                  .on('success', function (file, response) {
                    const imgPrototype = fotoContainer.dataset.prototype.replace(/__foto__/g, count);
                    dropzoneSuccess(fotoContainer, imgPrototype, file, response);
                    count++;
                    that.processQueue();
                  })
                  .on('removedfile', function (file) {
                    $(`input[value="${file.name}"]`).parent().parent().remove();
                  })
                  .on('addedfile', function (file) {
                    setTimeout(() => {
                      if (file.accepted) {
                        addedFiles = true;
                        that.haveNewFiles = true;
                      }
                    }, 100);

                    file.previewElement
                        .querySelector('.dz-filename')
                        .innerHTML = `
                            <a href="${file.dataURL}" target="_blank">Ver imagen</a>
                        `

                  })
                  .on('queuecomplete', function () {
                    if (that.haveNewFiles) {
                      dropzoneQueue();
                    }
                  })
              ;
            }
          });
        }

        actividadForm.addEventListener('submit', function (e) {
          e.preventDefault();

          $(':input[type="submit"]').button('loading');

          if (!addedFiles) {
            this.submit();
            return;
          }

          dropzoneQueue();
        });

        function dropzoneQueue() {
          dropzoneCounter++;
          let currentDropzone = existingDropzones[dropzoneCounter - 1];

          if (dropzoneCounter > existingDropzones.length) {
            actividadForm.submit();
            return;
          }

          if (!currentDropzone.haveNewFiles) {
            dropzoneQueue();
            return;
          }

          currentDropzone.processQueue();
        }

          {% for a, actividad in contratista.contratistaactividades %}
          {% for f, foto in actividad.fotos %}
        emitThumbnail(existingDropzones[{{ a }}], {
          name: '{{ foto.basename }}',
          size: {{ foto.size }},
          dataURL: '{{ app.request.basePath }}/uploads/actividad_fotos/{{ foto.basename }}'
        });
          {% endfor %}
          {% endfor %}

        function dropzoneSuccess(contenedor, prototipo, archivo, respuesta) {
          let divContainer = document.createElement('div');
          divContainer.innerHTML = prototipo;
          let imgInput = divContainer.querySelector('[name*="[basename]"]');
          let sizeInput = divContainer.querySelector('[name*="[size]"]');
          imgInput.dataset.uuid = archivo.upload.uuid;
          imgInput.value = respuesta.baseFileName;
          sizeInput.value = archivo.size;
          contenedor.appendChild(divContainer.firstChild);
        }

        function emitThumbnail(dz, thumb) {
          dz.files.push(thumb);
          dz.emit('addedfile', thumb);
          dz.emit('thumbnail', thumb, thumb.dataURL);
          dz.emit('complete', thumb);
        }

      })(jQuery);
    </script>
{% endblock %}
