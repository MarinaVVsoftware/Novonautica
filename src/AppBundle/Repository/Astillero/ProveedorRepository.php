<?php

namespace AppBundle\Repository\Astillero;

use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\Query;

/**
 * ProveedorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProveedorRepository extends \Doctrine\ORM\EntityRepository
{
    public function findProveedorNameLike($query)
    {
        return $this->createQueryBuilder('p')
            ->select('p.id AS id', 'p.nombre AS nombre')
            ->where('p.nombre LIKE :query')
            ->setParameter('query', "%{$query}%")
            ->setMaxResults(10)
            ->getQuery()
            ->getResult();
    }

    /**
     * @param $id
     *
     * @return mixed
     * @throws NonUniqueResultException
     */
    public function getOneByArray($id)
    {
        return $this->createQueryBuilder('ap')
            ->where('ap.id = :proveedor')
            ->setParameter('proveedor', $id)
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult(Query::HYDRATE_ARRAY);
    }

    public function findFirst()
    {
        return $this->createQueryBuilder('ap')
            ->setMaxResults( 1 )
            ->orderBy('ap.id', 'ASC')
            ->getQuery()->getSingleResult();
    }

}
