<?php

namespace AppBundle\Repository;

use AppBundle\Entity\AstilleroCotizacion;
use AppBundle\Entity\Cotizacion;
use AppBundle\Entity\MarinaHumedaCotizacion;
use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * ClienteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClienteRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $cliente
     *
     * @return float
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getTotalAdeudo($cliente)
    {
        return $this->createQueryBuilder('c')
            ->leftJoin('c.reportes', 'r')
            ->select('SUM(r.adeudo)')
            ->where('c = :cliente')
            ->setParameter('cliente', $cliente)
            ->setMaxResults(1)
            ->getQuery()
            ->getSingleScalarResult();
    }

    /**
     * @param $cliente
     *
     * @return float
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getTotalAbono($cliente)
    {
        return $this->createQueryBuilder('c')
            ->leftJoin('c.reportes', 'r')
            ->select('SUM(r.abono)')
            ->where('c = :cliente')
            ->setParameter('cliente', $cliente)
            ->setMaxResults(1)
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function getCotizacionesCount($cliente)
    {
        $total = 0;

        try {
            $total += $this->getEntityManager()
                ->createQuery(
                    'SELECT COUNT(cotizacion.id) '.
                    'FROM AppBundle:MarinaHumedaCotizacion cotizacion '.
                    'WHERE IDENTITY(cotizacion.cliente) = ?1'
                )
                ->setParameter(1, $cliente)
                ->getSingleScalarResult();

        } catch (NonUniqueResultException $e) {
            $total += 0;
        }

        try {
            $total += $this->getEntityManager()
                ->createQuery(
                    'SELECT COUNT(cotizacion.id) '.
                    'FROM AppBundle:AstilleroCotizacion cotizacion '.
                    'WHERE IDENTITY(cotizacion.cliente) = ?1'
                )
                ->setParameter(1, $cliente)
                ->getSingleScalarResult();

        } catch (NonUniqueResultException $e) {
            $total += 0;
        }

        return $total;
    }

    public function getCotizaciones($cliente, $search, $limit, $offset)
    {
        $query = $this->createQueryBuilder('cliente')
            ->select('cliente', 'marinaCotizaciones', 'astilleroCotizaciones')
            ->leftJoin(
                'cliente.mhcotizaciones',
                'marinaCotizaciones',
                'WITH',
                'marinaCotizaciones.cliente = cliente AND marinaCotizaciones.validacliente = 2'
            )
            ->leftJoin(
                'cliente.astilleroCotizaciones',
                'astilleroCotizaciones',
                'WITH',
                'astilleroCotizaciones.cliente = cliente AND astilleroCotizaciones.validacliente = 2'
            )
            ->andWhere(
                'cliente.id = :cliente'
            )
            ->setParameter('cliente', $cliente);

        return $query
            ->getQuery()
            ->getArrayResult();
    }
}
