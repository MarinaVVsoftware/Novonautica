{% extends 'estructura/plantilla.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet"
          href="{{ asset('css/fullcalendar.min.css') }}">
    <link rel="stylesheet"
          href="{{ asset('https://cdnjs.cloudflare.com/ajax/libs/fullcalendar-scheduler/1.9.4/scheduler.min.css') }}">
    <style>
        :root .btn {
            min-width: initial;
            text-align: center;
        }

        :root .panel-novo > .panel-body {
            min-height: initial;
        }

        :root .panel-body form.form-inline input {
            width: initial;
        }

        #slips > g path {
            cursor: pointer;
        }

        .ventanainfomapa .modal-header {
            border: none;
        }

        dl {
            margin-bottom: 1rem;
        }

        .dl-horizontal dt {
            text-align: left;
        }

        .form-inline {
            margin-bottom: 2rem;
        }

        .form-inline .form-group {
            margin-right: 1rem;
        }

        .tooltip-inner {
            max-width: initial;
        }

        .tooltip-inner > .dl-horizontal > dt {
            width: 100px;
        }

        .tooltip-inner > .dl-horizontal > dd {
            text-align: left;
            margin-left: 100px;
        }

        .fc-toolbar.fc-header-toolbar {
            margin-bottom: 0;
        }

        :root .fc-toolbar .fc-center {
            padding-top: 0;
        }

        .fc-center > div > button, .fc-center > div > h2 {
            font-size: 1.6rem;
            line-height: 3rem;
        }

        .fc button .fc-icon {
            vertical-align: initial;
        }

        .fc-toolbar {
            padding: 0;
        }
    </style>
{% endblock %}

{% block contwrapper %}
    <div class="content-wrapper">
        <section class="content" style="min-height: initial; padding-bottom: 0;">
            <div class="panel panel-novo" style="margin-bottom: 0;">
                <div class="panel-heading">
                    <h3 class="panel-title" style="display: inline-block">Timeline</h3>
                    <div class="box-tools pull-right">
                        <button class="btn btn-box-tool" type="button" data-widget="collapse" data-toggle="collapse"
                                data-target="#timeline-body" aria-expanded="true" aria-controls="timeline-body">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="panel-body collapse in" id="timeline-body">
                    <div class="row">
                        <div class="col-sm-12">
                            <div id='timeline'></div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <section class="content">
            <div class="row">
                <div id="alert-container" class="col-md-12">
                </div>
            </div>
            <div class="panel panel-novo">
                <div class="panel-heading">
                    <h3 class="panel-title">Mapa</h3>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-sm-12">
                            <form class="form-inline" id="reporte-data">
                                <div class="form-group">
                                    <label for="fecha">Fecha</label>
                                    <input type="text" class="form-control input-calendario" id="fecha" readonly>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-12">
                            {% include 'marinahumeda/mapa/_mapa.html.twig' %}
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="map-data" class="table table-condensed text-center">
                                <thead>
                                <tr>
                                    <th>Amarres en pies</th>
                                    <th>Total de amarres</th>
                                    <th>Amarres ocupados</th>
                                    <th>% ocupaci√≥n</th>
                                </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
{% endblock %}

{% block modals %}
    <div class="modal ventanainfomapa" id="slip-info" role="dialog" aria-labelledby="slip-info">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
                                aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" style="color: #0097f6"></h4>
                </div>
                <div class="modal-body">
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="{{ asset('js/svg-pan-zoom.min.js') }}"></script>
    <script src="{{ asset('bower_components/moment/min/moment.min.js') }}"></script>
    <script src="{{ asset('https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.min.js') }}"></script>
    <script src="{{ asset('https://cdnjs.cloudflare.com/ajax/libs/fullcalendar-scheduler/1.9.4/scheduler.min.js') }}"></script>
    <script src="{{ asset('bower_components/fullcalendar/dist/locale/es.js') }}"></script>
    <script type="text/javascript">
      (function ($) {
        const errorContainer = document.getElementById('alert-container');
        const slips = document.querySelectorAll('#slips > g');
        const $tooltips = $(slips);
        const $timeline = $('#timeline');
        const mapTableBody = document.querySelector('#map-data > tbody');
        const $fechaInput = $('#fecha');
        const $modal = $('#slip-info');
        const $modalBody = $modal.find('.modal-body');
        const $modalTitle = $modal.find('.modal-title');

        const datepickerConfig = {
          language: 'es',
          autoclose: true,
          format: 'dd/mm/yyyy',
          orientation: 'auto bottom',
          setDate: new Date()
        };

        let mapData = null;

        svgPanZoom('#mapa', {
          zoomEnabled: true,
          controlIconsEnabled: true,
          mouseWheelZoomEnabled: false,
          fit: true,
          center: true,
          viewportSelector: document.getElementById('mapa-total'),
          beforePan: function (oldPan, newPan) {
            let gutterWidth = 600;
            let gutterHeight = 400;
            let sizes = this.getSizes();
            let leftLimit = -((sizes.viewBox.x + sizes.viewBox.width) * sizes.realZoom) + gutterWidth;
            let rightLimit = sizes.width - gutterWidth - (sizes.viewBox.x * sizes.realZoom);
            let topLimit = -((sizes.viewBox.y + sizes.viewBox.height) * sizes.realZoom) + gutterHeight;
            let bottomLimit = sizes.height - gutterHeight - (sizes.viewBox.y * sizes.realZoom);
            return {
              x: Math.max(leftLimit, Math.min(rightLimit, newPan.x)),
              y: Math.max(topLimit, Math.min(bottomLimit, newPan.y))
            };
          }
        });

        generateMap();

        $fechaInput
            .datepicker({
              ...datepickerConfig,
              todayBtn: 'linked'
            })
            .datepicker('setDate', 'today')
            .on('hide', function (e) {
              generateMap(e.date);
            });

        $tooltips
            .tooltip({
              container: '#container',
              placement: 'bottom',
              html: true,
              title: function () {
                return this.dataset.detail ? generateTooltipDetail(mapData[this.dataset.detail]) : 'Abierto';
              }
            })
        ;

        $timeline.fullCalendar({
          schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',
          defaultView: 'timelineMonth',
          header: {
            left: '',
            center: 'prev,title,next',
            right: ''
          },
          views: {
            timelineMonth: {
              slotLabelFormat: [
                'D'
              ]
            }
          },
          height: 250,
          displayEventTime: false,
          resourceAreaWidth: '8%',
          resourceLabelText: 'Slips',
          resources: getResources(),
          events: 'events.json',
          eventRender: function (event, $element) {
            $element.tooltip({
              container: '.content-wrapper',
              html: true,
              placement: 'auto bottom',
              title: function () {
                return `
                    <dl class="dl-horizontal" style="margin-bottom: 0">
                      <dt>${event.title}</dt>
                      <dd></dd>
                      <dt>Llegada</dt>
                      <dd>${event.start.format('DD/MM/YYYY')}</dd>
                      <dt>Salida</dt>
                      <dd>${event.end.format('DD/MM/YYYY')}</dd>
                    </dl>
                `
              }
            })
          }
        });

        $('#slips').on('click', 'g', function () {
          let detail = this.dataset.detail;
          (detail) ? setDetailModal(detail) : setOptionsModal(this.id.replace('e', ''));
        });

        function getResources() {
          let resources = [];

          for (let i = 1; i <= 176; i++) {
            resources.push({id: i, title: '#' + i});
          }

          return resources;
        }

        function setOptionsModal(slip) {
          $modalTitle.text('Detalles');
          $modalBody.html(`
            <div class="text-center">
              <button class="assign-btn btn btn-azul margin-bottom" data-loading-text="Cargando...">Asignar</button>
              <button class="lock-btn btn btn-naranja margin-bottom" data-loading-text="Cargando...">Bloquear</button>
            </div>
          `);

          $modalBody
              .find('.assign-btn')
              .on('click', function () {
                $(this).button('loading');
                setAssignModal(slip);
              });

          $modalBody
              .find('.lock-btn')
              .on('click', function () {
                $(this).button('loading');
                setLockModal(slip);
              });

          $modal.modal('show');
        }

        function setDetailModal(detail) {
          let data = mapData[detail];

          $modalTitle.text('Detalles');
          $modalBody.html(generateDetails(data));
          $modalBody.find('.unassign-btn')
              .on('click', function (e) {
                e.preventDefault();
                $(this).button('loading');
                unAssignSlip(data);
              });
          $modal.modal('show');
        }

        function setAssignModal(slip) {
          $.get(`{{ app.request.requestUri }}/${slip}/assign`)
              .done(function (form) {

                $modalTitle.text('Asignacion de Slip #' + slip);

                $modalBody.html(form);
                $modalBody
                    .find('#appbundle_slipmovimiento_marinahumedacotizacion')
                    .select2()
                    .on('change', function () {
                      let $selectedOption = $(this).find(':selected');
                      isSlipOpen(slip, $selectedOption.data('llegada'), $selectedOption.data('salida'));
                    });

                $modalBody.find('form[name="appbundle_slipmovimiento"]')
                    .on('submit', function (e) {
                      e.preventDefault();

                      const $submitBtn = $(this).find('[type="submit"]');
                      $submitBtn.button('loading');

                      $.post(this.action, $(this).serialize(), 'json')
                          .done(function () {
                            generateMap($fechaInput.datepicker('getDate'));
                            $timeline.fullCalendar('refetchEvents');
                            $modal.modal('hide');
                          })
                          .fail(function ({responseJSON}) {
                            console.log(responseJSON);
                            responseJSON.errors.forEach(error => createAlert(error));
                            $modal.modal('hide');
                          })
                          .always(function () {
                            $submitBtn.button('reset');
                          })
                      ;
                    });

              })
              .done(function () {
                $modal.modal('show');
              });
        }

        function setLockModal(slip) {
          $.get(`{{ app.request.requestUri }}/${slip}/lock`)
              .done(function (form) {
                $modalTitle.text('Bloqueo de Slip #' + slip);
                $modalBody.html(form);

                let startPicker = $modalBody.find('#appbundle_slipmovimiento_lock_fechaLlegada')
                    .datepicker(datepickerConfig);

                let endPicker = $modalBody.find('#appbundle_slipmovimiento_lock_fechaSalida')
                    .datepicker(datepickerConfig)
                    .datepicker('setStartDate', startPicker.valueAsDate)
                ;

                startPicker.on('changeDate', function (e) {
                  endPicker.datepicker('setStartDate', e.date);
                  endPicker.datepicker('setDate', e.date);
                });

                endPicker.on('hide', function () {
                  isSlipOpen(slip, startPicker.val().replace(/\//g, '-'), $(this).val().replace(/\//g, '-'))
                });

                $modalBody
                    .find('#appbundle_slipmovimiento_marinahumedacotizacion')
                    .on('change', function () {
                      let $selectedOption = $(this).find(':selected');
                      isSlipOpen(slip, $selectedOption.data('llegada'), $selectedOption.data('salida'));
                    });

                $modalBody.find('form[name="appbundle_slipmovimiento_lock"]')
                    .on('submit', function (e) {
                      e.preventDefault();
                      const $submitBtn = $(this).find('[type="submit"]');

                      $submitBtn.button('loading');

                      $.post(this.action, $(this).serialize(), 'json')
                          .done(function () {
                            generateMap($fechaInput.datepicker('getDate'));
                            $timeline.fullCalendar('refetchEvents');
                            $modal.modal('hide');
                          })
                          .fail(function ({responseJSON}) {
                            responseJSON.errors.forEach(error => createAlert(error));
                            $modal.modal('hide');
                          })
                          .always(function () {
                            $submitBtn.button('reset');
                          });
                      ;
                    });
              })
              .done(function () {
                $modal.modal('show');
              });
        }

        function generateMap(fecha) {
          $.ajax('{{ path('mapa-data') }}', {
            dataType: 'json',
            data: {f: fecha && (fecha.toLocaleDateString('en-GB'))},
            beforeSend: clearData
          })
              .done(function ({data, boats}) {
                let totalAmarres = 0;
                let totalOcupacion = 0;
                mapData = boats;

                slips.forEach(function (slip) {
                  boats.forEach(function (boat, key) {
                    if (`e${boat.slip.num}` !== slip.id) return;

                    slip.children[0].classList.remove('st1');
                    slip.dataset.detail = key;

                    if (boat.nota) {
                      slip.children[0].classList.add('st3');
                      return;
                    }

                    slip.children[0].classList.add('st4');
                  });
                });

                data.forEach(function ({pies, ocupados, total}) {
                  let row = mapTableBody.insertRow();
                  totalAmarres += ocupados;
                  totalOcupacion += total;

                  row.insertCell().innerText = pies;
                  row.insertCell().innerText = total;
                  row.insertCell().innerText = ocupados;
                  row.insertCell().innerText = ((ocupados / total) * 100).toFixed(2);
                });

                let totalRow = mapTableBody.insertRow();
                totalRow.insertCell().innerText = 'Total';
                totalRow.insertCell().innerText = totalOcupacion.toString();
                totalRow.insertCell().innerText = totalAmarres.toString();
                totalRow.insertCell().innerText = ((totalAmarres / totalOcupacion) * 100).toFixed(2);
              });
        }

        function isSlipOpen(slip, start, end) {
          $.ajax(`{{ app.request.requestUri }}/${slip}/isopen.json`, {data: {start, end}, dataType: 'json'})
              .done(function (boat) {
                let $detail = $('#cotizacion-detail');
                let $closed = $('#slipClosed');
                let $submitBtn = $modalBody.find('.btn-azul');

                $detail.html(`
                <dl class="dl-horizontal">
                  <dt>Fecha de llegada</dt>
                  <dd>${start.replace(/-/g, '/')}</dd>
                  <dt>Fecha de salida</dt>
                  <dd>${end.replace(/-/g, '/')}</dd>
                </dl>
                `);

                if (boat) {
                  let cotizacion = boat.marinahumedacotizacion;

                  if (cotizacion) {
                    $closed.html(`
                    <div class="alert alert-danger text-center" role="alert">
                      La fecha de la cotizaci√≥n elegida coincide con la cotizaci√≥n:
                    </div>
                    <dl class="dl-horizontal">
                      <dt>Folio</dt>
                      <dd>${cotizacion.folio + (cotizacion.foliorecotiza ? '-' + cotizacion.foliorecotiza : '')}</dd>
                      <dt>Cliente</dt>
                      <dd>${cotizacion.cliente.nombre}</dd>
                      <dt>Barco</dt>
                      <dd>${cotizacion.barco.nombre}</dd>
                      <dt>Fecha de llegada</dt>
                      <dd>${new Date(boat.fechaLlegada).toLocaleDateString('es-MX')}</dd>
                      <dt>Fecha de salida</dt>
                      <dd>${new Date(boat.fechaSalida).toLocaleDateString('es-MX')}</dd>
                    </dl>
                  `);
                  } else {
                    $closed.html(`
                        <div class="alert alert-danger text-center" role="alert">
                          La fecha de la cotizaci√≥n elegida coincide con un bloqueo con la nota:
                        </div>
                        <p>${boat.nota}</p>
                    `);
                  }

                  $submitBtn.attr('disabled', 'disabled');
                  return;
                }

                $closed.html('');
                $submitBtn.removeAttr('disabled', 'disabled');
              })
          ;
        }

        function unAssignSlip({id: movimiento}) {
          $.ajax(`{{ app.request.requestUri }}/${movimiento}/remove`, {type: 'DELETE'})
              .done(() => {
                generateMap($fechaInput.datepicker('getDate'));
                $timeline.fullCalendar('refetchEvents');
                $modal.modal('hide');
              });
        }

        function generateDetails(boat) {
          if (!boat.nota) {
            let llegada = new Date(boat.fechaLlegada);
            let salida = new Date(boat.fechaSalida);
            let folio = boat.marinahumedacotizacion.folio + (boat.marinahumedacotizacion.foliorecotiza ? '-' + boat.marinahumedacotizacion.foliorecotiza : '');

            return `
            <dl class="dl-horizontal">
              <dt>Folio</dt>
              <dd>${folio}</dd>
              <dt>Cliente</dt>
              <dd>${boat.marinahumedacotizacion.cliente.nombre}</dd>
              <dt>Barco</dt>
              <dd>${boat.marinahumedacotizacion.barco.nombre}</dd>
              <dt>Fecha de llegada</dt>
              <dd>${llegada.toLocaleDateString('es-MX')}</dd>
              <dt>Fecha de salida</dt>
              <dd>${salida.toLocaleDateString('es-MX')}</dd>
            </dl>
            <div class="text-center">
              <a href="{{ app.request.baseUrl }}/marina/cotizacion/${boat.marinahumedacotizacion.id}" class="btn btn-xs btn-morado-claro" target="_blank">Ver Cotizaci√≥n</a>
              <a href="#" class="unassign-btn btn btn-xs btn-naranja" data-loading-text="Cargando...">Desasignar</a>
            </div>
          `;
          }

          return `
            <p>
            ${boat.nota}
            </p>
            <div class="text-center">
              <a href="#" class="unassign-btn btn btn-xs btn-naranja" data-loading-text="Cargando...">Desbloquear</a>
            </div>
          `;
        }

        function generateTooltipDetail(slip) {
          let llegada = new Date(slip.fechaLlegada);
          let salida = new Date(slip.fechaSalida);

          return slip.nota ? slip.nota : `
            <dl class="dl-horizontal" style="margin-bottom: 0">
              <dt>${slip.marinahumedacotizacion.barco.nombre}</dt>
              <dd></dd>
              <dt>Llegada</dt>
              <dd>${llegada.toLocaleDateString('es-MX')}</dd>
              <dt>Salida</dt>
              <dd>${salida.toLocaleDateString('es-MX')}</dd>
            </dl>
          `;
        }

        function createAlert(message) {
          errorContainer.innerHTML = `
            <div class="alert alert-danger">${message}</div>
          `;

          setTimeout(function () {
            errorContainer.innerHTML = '';
          }, 10000);
        }

        function clearData() {
          mapTableBody.innerHTML = '';

          slips.forEach(function (slip) {
            slip.children[0].classList.remove('st4', 'st3');
            slip.children[0].classList.add('st1');

            if (slip.dataset.detail) {
              delete slip.dataset.detail;
            }
          });
        }

      })(jQuery);
    </script>
{% endblock %}
